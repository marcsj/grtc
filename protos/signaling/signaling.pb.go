// Code generated by protoc-gen-go. DO NOT EDIT.
// source: signaling/signaling.proto

package signaling

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OfferRequest struct {
	Sdp                  string   `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferRequest) Reset()         { *m = OfferRequest{} }
func (m *OfferRequest) String() string { return proto.CompactTextString(m) }
func (*OfferRequest) ProtoMessage()    {}
func (*OfferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_signaling_0503f42bd81347fa, []int{0}
}
func (m *OfferRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferRequest.Unmarshal(m, b)
}
func (m *OfferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferRequest.Marshal(b, m, deterministic)
}
func (dst *OfferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferRequest.Merge(dst, src)
}
func (m *OfferRequest) XXX_Size() int {
	return xxx_messageInfo_OfferRequest.Size(m)
}
func (m *OfferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OfferRequest proto.InternalMessageInfo

func (m *OfferRequest) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

type OfferResponse struct {
	Sdp                  string   `protobuf:"bytes,1,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferResponse) Reset()         { *m = OfferResponse{} }
func (m *OfferResponse) String() string { return proto.CompactTextString(m) }
func (*OfferResponse) ProtoMessage()    {}
func (*OfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_signaling_0503f42bd81347fa, []int{1}
}
func (m *OfferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferResponse.Unmarshal(m, b)
}
func (m *OfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferResponse.Marshal(b, m, deterministic)
}
func (dst *OfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferResponse.Merge(dst, src)
}
func (m *OfferResponse) XXX_Size() int {
	return xxx_messageInfo_OfferResponse.Size(m)
}
func (m *OfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OfferResponse proto.InternalMessageInfo

func (m *OfferResponse) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

func init() {
	proto.RegisterType((*OfferRequest)(nil), "signaling.OfferRequest")
	proto.RegisterType((*OfferResponse)(nil), "signaling.OfferResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SignalingServiceClient is the client API for SignalingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignalingServiceClient interface {
	Offer(ctx context.Context, in *OfferRequest, opts ...grpc.CallOption) (*OfferResponse, error)
}

type signalingServiceClient struct {
	cc *grpc.ClientConn
}

func NewSignalingServiceClient(cc *grpc.ClientConn) SignalingServiceClient {
	return &signalingServiceClient{cc}
}

func (c *signalingServiceClient) Offer(ctx context.Context, in *OfferRequest, opts ...grpc.CallOption) (*OfferResponse, error) {
	out := new(OfferResponse)
	err := c.cc.Invoke(ctx, "/signaling.SignalingService/Offer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignalingServiceServer is the server API for SignalingService service.
type SignalingServiceServer interface {
	Offer(context.Context, *OfferRequest) (*OfferResponse, error)
}

func RegisterSignalingServiceServer(s *grpc.Server, srv SignalingServiceServer) {
	s.RegisterService(&_SignalingService_serviceDesc, srv)
}

func _SignalingService_Offer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).Offer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signaling.SignalingService/Offer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).Offer(ctx, req.(*OfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SignalingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "signaling.SignalingService",
	HandlerType: (*SignalingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Offer",
			Handler:    _SignalingService_Offer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "signaling/signaling.proto",
}

func init() {
	proto.RegisterFile("signaling/signaling.proto", fileDescriptor_signaling_0503f42bd81347fa)
}

var fileDescriptor_signaling_0503f42bd81347fa = []byte{
	// 132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0xce, 0x4c, 0xcf,
	0x4b, 0xcc, 0xc9, 0xcc, 0x4b, 0xd7, 0x87, 0xb3, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38,
	0xe1, 0x02, 0x4a, 0x0a, 0x5c, 0x3c, 0xfe, 0x69, 0x69, 0xa9, 0x45, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0xc5, 0x29, 0x05, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x20, 0xa6, 0x92, 0x22, 0x17, 0x2f, 0x54, 0x45, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0xa6, 0x12,
	0x23, 0x3f, 0x2e, 0x81, 0x60, 0x98, 0x89, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x56,
	0x5c, 0xac, 0x60, 0x6d, 0x42, 0xe2, 0x7a, 0x08, 0xeb, 0x91, 0xad, 0x92, 0x92, 0xc0, 0x94, 0x80,
	0xd8, 0x90, 0xc4, 0x06, 0x76, 0xa6, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x33, 0x54, 0x79, 0x6d,
	0xc3, 0x00, 0x00, 0x00,
}
